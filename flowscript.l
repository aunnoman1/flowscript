%option noyywrap

%{
#include "flowscript.tab.h" // Generated by Bison
#include <string.h>

// It's good practice to declare yylval here if it's a union
// extern YYSTYPE yylval; 
%}

DIGIT    [0-9]
ID       [a-zA-Z_][a-zA-Z0-9_]*

%%

"if"        { return IF; }
"else"      { return ELSE; }
"for"       { return FOR; }
"each"      { return EACH; }
"range"     { return RANGE; } // Assuming range is a keyword for the construct
"print"     { return PRINT; } // Assuming print is a keyword/built-in
"double"    { return BUILTIN_DOUBLE; }
"add"       { return BUILTIN_ADD; }

"and"       { return AND; }
"or"        { return OR; }
"not"       { return NOT; }

{DIGIT}+    { yylval.ival = atoi(yytext); return NUMBER; }
{ID}        { yylval.sval = strdup(yytext); return IDENTIFIER; }

"|>"        { return PIPE; }
"="         { return ASSIGN; }
"+"         { return PLUS; }
"-"         { return MINUS; }
"*"         { return MULTIPLY; }
"/"         { return DIVIDE; }
"=="        { return EQ; }
"!="        { return NEQ; }
"<"         { return LT; }
">"         { return GT; }

"("         { return LPAREN; }
")"         { return RPAREN; }
"{"         { return LBRACE; }
"}"         { return RBRACE; }
","         { return COMMA; }

[ \t\n]+    { /* Skip whitespace */ }
"//".*      { /* Skip single-line comments */ }

.           { fprintf(stderr, "Lexical error: Unexpected character %s\n", yytext); }

%% 